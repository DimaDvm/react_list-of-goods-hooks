{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","alphabeticSort","setState","ALPHABET","lengthSort","LENGTH","resetSort","reversed","prevState","this","visibleGoods","goods","sort","good1","good2","length","localeCompare","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEJ,SAAUJ,EAASS,YAPvC,EAUEC,WAAa,WACX,EAAKF,SAAS,CAAEJ,SAAUJ,EAASW,UAXvC,EAcEC,UAAY,WACV,EAAKJ,SAAS,CACZJ,SAAUJ,EAASK,KACnBC,YAAY,KAjBlB,EAqBEO,SAAW,WACT,EAAKL,UAAS,SAACM,GAAD,MAAgB,CAC5BR,YAAaQ,EAAUR,gBAvB7B,4CA2BE,WACE,MAAiCS,KAAKZ,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WACZU,EA9DH,SACLC,EADK,GAGJ,IADCb,EACF,EADEA,SAAUE,EACZ,EADYA,WAGNU,EAAY,YAAOC,GAmBzB,OAjBAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQhB,GACN,KAAKJ,EAASW,OACZ,OAAOQ,EAAME,OAASD,EAAMC,OAE9B,KAAKrB,EAASS,SACZ,OAAOU,EAAMG,cAAcF,GAE7B,QACE,OAAOpB,EAASK,SAIlBC,GACFU,EAAaO,UAGRP,EAsCgBQ,CACnBvB,EAAiB,CAAEG,WAAUE,eAG/B,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYvB,IAAaJ,EAASS,WAGtCmB,QAASb,KAAKR,eARhB,iCAaA,wBACEmB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYvB,IAAaJ,EAASW,SAGtCiB,QAASb,KAAKL,WARhB,4BAaA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAA2B,IAAfrB,IAGhBsB,QAASb,KAAKF,SARhB,sBAaET,IAAaJ,EAASK,MAAQC,IAC9B,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAASb,KAAKH,UAHhB,sBAUJ,6BACE,6BACGI,EAAaa,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBAzFtC,GAAyBC,IAAMC,WC5D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d913f89b.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      default:\n        return SortType.NONE;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  alphabeticSort = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  lengthSort = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  resetSort = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  reversed = () => {\n    this.setState((prevState) => ({\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer, { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={this.alphabeticSort}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.lengthSort}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': isReversed !== true,\n              },\n            )}\n            onClick={this.reversed}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetSort}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map((good) => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}